
upstream proxy_default {
    server 172.19.160.188; #weight=1 max_fails=1 fail_timeout=10s;
    server 172.19.160.199; #weight=1 max_fails=1 fail_timeout=10s;
    server 172.19.160.199:8082 backup; #weight=1 max_fails=1 fail_timeout=30s;
}


log_format  log_default '[$time_iso8601] [$msec] [$scheme] [$server_protocol] '
    '[$host] [$uri] [$query_string] [$request_method] [$request_body] '
    '[$http_user_agent] [$http_referer] [$arg_name] [$cookie_name] [$http_name] '
    '[$status] [$request_time] [$request_length] [$bytes_sent] '
    '[$remote_addr] [$http_x_forwarded_for] [$proxy_add_x_forwarded_for] [$http_x_real_ip] '
    '[$upstream_status] [$upstream_addr] [$upstream_response_time] [$upstream_response_length] '
    '[$upstream_cookie_name] [$upstream_http_name] ';




server {
    listen       443 ssl;
    server_name  api.test.com;

    ssl_buffer_size      16k;  #设置发送数据的缓存区的大小，默认16k
    ssl_certificate      /data/server/nginx/conf/test_ssl_key/server.pem;  #ssl 证书文件
    ssl_certificate_key  /data/server/nginx/conf/test_ssl_key/server.key;  #ssl 私钥文件
    ssl_session_timeout  5m;   #指定客户端可以重用会话参数的时间。

    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;    # 启用指定的加密协议
    ssl_ciphers  HIGH:!RC4:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!EXP:+MEDIUM;    #ssl 指定加密方式 
    ssl_prefer_server_ciphers   on;          # 指定在使用SSLv3和TLS协议时，服务器密码应优先于客户端密码。

    location / {
        proxy_store off;
        proxy_redirect  off;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:80;
    }
}



server {
    listen       80;
    server_name  log.pro.test.com;

    access_log  /data/server/nginx/logs/log.format.access.log  log_default;
    error_log   /data/server/nginx/logs/log.format.error.log;

    location / {

        proxy_pass http://proxy_default;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;   #最外层nginx配置，内层nginx不需要配置，否者显示为上一层代理的内网ip

        proxy_buffering on;            #启用或禁用来自代理服务器的响应缓冲。启用以下参数才有意义
        proxy_buffers 4 128k;          #设置用于从代理服务器读取响应的缓冲区的数量和大小，用于单个连接
        proxy_buffer_size 128k;        #设置用于读取从代理服务器接收的响应的第一部分的缓冲区的大小。这部分通常包含一个小的响应头。可以理解为主要用于缓存header头，其大小要大于响应header头
        proxy_busy_buffers_size 256k;  #可以理解为：设定往客户端回传数据的缓存区总大小，一般是两个缓存区大小，其他缓存区用于从后端服务获取数据。
        proxy_max_temp_file_size 1024m;  #不适合放在缓存区的响应数据，写入临时文件中，这里是文件大小设定
        proxy_temp_file_write_size 256k; #一次写入缓存文件的数据大小，一般为两个缓存区大小

        proxy_connect_timeout 10s;       #设置与后端服务器建立连接的超时时间
        proxy_read_timeout 10s;          #设置从后端服务器读取响应的超时时间，只是两次连续的读操作之间的超时设定，不是整个响应的传输设定
        proxy_send_timeout 10s;          #设置将请求传输到后端服务器的超时时间，只是两次连续写入操作之间的超时设定，而不是为整个请求的传输。


        proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;  #指定应将请求传递到下一个服务器的情况
#proxy_next_upstream_timeout 3s; #限制请求可以传递到下一个服务器的时间  v1.7.5 以上版本 
#proxy_next_upstream_tries 2;    #限制将请求传递到下一个服务器的可能尝试次数。 v1.7.5 以上版本

        client_max_body_size 100m;      #设置客户端请求正文的最大允许大小，超出返回http状态码413，将大小设置为0将禁用检查客户端请求正文大小
        client_body_buffer_size 128k;   #设置读取客户端请求主体的缓冲区大小。如果请求主体大于缓冲区，则整个主体或仅其部分被写入临时文件。
        #proxy_store off;                #将文件保存到磁盘
        #proxy_redirect default;         #设置应在代理服务器响应的响应头中的“Location”和“refresh”字段更改的文本
    }
}
